{"remainingRequest":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/babel-loader/lib/index.js!/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/eslint-loader/index.js??ref--13-0!/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/src/permission.js","dependencies":[{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/src/permission.js","mtime":1599276066979},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2V0aGVuLnhpZS9Xb3JrX1Byb2plY3QvanVzdGRvaXQvUWluZ3l1YW5EYXRhQ2VudGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7IC8vIHByb2dyZXNzIGJhciBzdHlsZQoKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZSc7Ck5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbiddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnJvdXRlci5iZWZvcmVFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgaGFzVG9rZW4sIGhhc0dldFVzZXJJbmZvOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAvLyBzdGFydCBwcm9ncmVzcyBiYXIKICAgICAgICAgICAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHNldCBwYWdlIHRpdGxlCgogICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IGdldFBhZ2VUaXRsZSh0by5tZXRhLnRpdGxlKTsgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbgoKICAgICAgICAgICAgaGFzVG9rZW4gPSB0cnVlOyAvLyBnZXRUb2tlbigpCgogICAgICAgICAgICBpZiAoaGFzVG9rZW4pIHsKICAgICAgICAgICAgICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsKICAgICAgICAgICAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICAgICAgICAgICAgLy8gbmV4dCgpCiAgICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgICAgcGF0aDogJy8nCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGhhc0dldFVzZXJJbmZvID0gc3RvcmUuZ2V0dGVycy5uYW1lOwoKICAgICAgICAgICAgICAgIGlmIChoYXNHZXRVc2VySW5mbykgewogICAgICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIC8vIGdldCB1c2VyIGluZm8KICAgICAgICAgICAgICAgICAgICAvLyBhd2FpdCBzdG9yZS5kaXNwYXRjaCgndXNlci9nZXRJbmZvJykKICAgICAgICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRva2VuIGFuZCBnbyB0byBsb2dpbiBwYWdlIHRvIHJlLWxvZ2luCiAgICAgICAgICAgICAgICAgICAgLy8gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpCiAgICAgICAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihlcnJvciB8fCAnSGFzIEVycm9yJyk7CiAgICAgICAgICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8qIGhhcyBubyB0b2tlbiovCiAgICAgICAgICAgICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAgICAgICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","getters","name","error","indexOf","afterEach"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BR,MAAM,CAACS,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAT,YAAAA,SAAS,CAACU,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQC,IARD,EAQM;;AAEtB,gBAAIA,QAAJ,EAAc;AACZ,kBAAIP,EAAE,CAACQ,IAAH,KAAY,QAAhB,EAA0B;AACxB;AACA;AACAN,gBAAAA,IAAI,CAAC;AAAEM,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAJ;AACAf,gBAAAA,SAAS,CAACgB,IAAV;AACD,eALD,MAKO;AACCC,gBAAAA,cADD,GACkBnB,KAAK,CAACoB,OAAN,CAAcC,IADhC;;AAEL,oBAAIF,cAAJ,EAAoB;AAClBR,kBAAAA,IAAI;AACL,iBAFD,MAEO;AACL,sBAAI;AACF;AACA;AAEAA,oBAAAA,IAAI;AACL,mBALD,CAKE,OAAOW,KAAP,EAAc;AACd;AACA;AACArB,oBAAAA,OAAO,CAACqB,KAAR,CAAcA,KAAK,IAAI,WAAvB;AACAX,oBAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,oBAAAA,SAAS,CAACgB,IAAV;AACD;AACF;AACF;AACF,aAzBD,MAyBO;AACL;AAEA,kBAAIX,SAAS,CAACgB,OAAV,CAAkBd,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,gBAAAA,IAAI;AACL,eAHD,MAGO;AACL;AACAA,gBAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,gBAAAA,SAAS,CAACgB,IAAV;AACD;AACF;;AA9Ce;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAiDAnB,MAAM,CAACyB,SAAP,CAAiB,YAAM;AACrB;AACAtB,EAAAA,SAAS,CAACgB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = true // getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      // next()\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      const hasGetUserInfo = store.getters.name\n      if (hasGetUserInfo) {\n        next()\n      } else {\n        try {\n          // get user info\n          // await store.dispatch('user/getInfo')\n\n          next()\n        } catch (error) {\n          // remove token and go to login page to re-login\n          // await store.dispatch('user/resetToken')\n          Message.error(error || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}