{"remainingRequest":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/src/components/Breadcrumb/index.vue","mtime":1598967372357},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ethen.xie/Work_Project/justdoit/QingyuanDataCenter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxldmVsTGlzdDogbnVsbAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICRyb3V0ZSgpIHsKICAgICAgdGhpcy5nZXRCcmVhZGNydW1iKCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldEJyZWFkY3J1bWIoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QnJlYWRjcnVtYigpIHsKICAgICAgLy8gb25seSBzaG93IHJvdXRlcyB3aXRoIG1ldGEudGl0bGUKICAgICAgY29uc3QgbWF0Y2hlZCA9IHRoaXMuJHJvdXRlLm1hdGNoZWQuZmlsdGVyKGl0ZW0gPT4gaXRlbS5tZXRhICYmIGl0ZW0ubWV0YS50aXRsZSkKICAgICAgLy8gY29uc29sZS5sb2cobWF0Y2hlZCkKICAgICAgaWYgKG1hdGNoZWQubGVuZ3RoID4gMSkgewogICAgICAgIC8vIGlmICghdGhpcy5pc0Rhc2hib2FyZChmaXJzdCkpIHsKICAgICAgLy8gICBtYXRjaGVkID0gW3sgcGF0aDogJy9kYXNoYm9hcmQnLCBtZXRhOiB7IHRpdGxlOiAnRGFzaGJvYXJkJyB9fV0uY29uY2F0KG1hdGNoZWQpCiAgICAgIC8vIH0KICAgICAgICB0aGlzLmxldmVsTGlzdCA9IG1hdGNoZWQuZmlsdGVyKGl0ZW0gPT4gaXRlbS5tZXRhICYmIGl0ZW0ubWV0YS50aXRsZSAmJiBpdGVtLm1ldGEuYnJlYWRjcnVtYiAhPT0gZmFsc2UpCiAgICAgIH0gZWxzZSBpZiAobWF0Y2hlZC5sZW5ndGggPT09IDEpIHsKICAgICAgICBjb25zdCBvbmVNYXRjaGVkID0gbWF0Y2hlZFswXQogICAgICAgIGlmIChvbmVNYXRjaGVkLm1ldGEgJiYgb25lTWF0Y2hlZC5tZXRhLnRvdGFsVGl0bGUpIHsKICAgICAgICAgIGNvbnN0IGxldmVsTGlzdCA9IFtdCiAgICAgICAgICBjb25zdCBhcnJheSA9IG9uZU1hdGNoZWQucGF0aC5zcGxpdCgnLycpCiAgICAgICAgICBhcnJheS5zaGlmdCgpCiAgICAgICAgICBhcnJheS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgICBsZXZlbExpc3QucHVzaCh7CiAgICAgICAgICAgICAgcGF0aDogdGhpcy5nZXRGdWxsUGF0aChhcnJheSwgaW5kZXgpLAogICAgICAgICAgICAgIG1ldGE6IHsKICAgICAgICAgICAgICAgIHRpdGxlOiBvbmVNYXRjaGVkLm1ldGEudG90YWxUaXRsZVtpbmRleF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5sZXZlbExpc3QgPSBsZXZlbExpc3QKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5sZXZlbExpc3QgPSBtYXRjaGVkLmZpbHRlcihpdGVtID0+IGl0ZW0ubWV0YSAmJiBpdGVtLm1ldGEudGl0bGUgJiYgaXRlbS5tZXRhLmJyZWFkY3J1bWIgIT09IGZhbHNlKQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmxldmVsTGlzdCA9IFtdCiAgICAgIH0KICAgIH0sCiAgICBnZXRGdWxsUGF0aChhcnJheSwgaW5kZXgpIHsKICAgICAgcmV0dXJuIGFycmF5LnJlZHVjZSgodG90YWwsIGN1cnJlbnRWYWx1ZSwgY3VycmVudEluZGV4KSA9PiB7CiAgICAgICAgaWYgKGN1cnJlbnRJbmRleCA+IGluZGV4KSByZXR1cm4gdG90YWwKICAgICAgICByZXR1cm4gYCR7dG90YWx9LyR7Y3VycmVudFZhbHVlfWAKICAgICAgfSwgJycpCiAgICB9LAogICAgaXNEYXNoYm9hcmQocm91dGUpIHsKICAgICAgY29uc3QgbmFtZSA9IHJvdXRlICYmIHJvdXRlLm5hbWUKICAgICAgaWYgKCFuYW1lKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0KICAgICAgcmV0dXJuIG5hbWUudHJpbSgpLnRvTG9jYWxlTG93ZXJDYXNlKCkgPT09ICdEYXNoYm9hcmQnLnRvTG9jYWxlTG93ZXJDYXNlKCkKICAgIH0sCiAgICBwYXRoQ29tcGlsZShwYXRoKSB7CiAgICAgIC8vIFRvIHNvbHZlIHRoaXMgcHJvYmxlbSBodHRwczovL2dpdGh1Yi5jb20vUGFuSmlhQ2hlbi92dWUtZWxlbWVudC1hZG1pbi9pc3N1ZXMvNTYxCiAgICAgIGNvbnN0IHsgcGFyYW1zIH0gPSB0aGlzLiRyb3V0ZQogICAgICB2YXIgdG9QYXRoID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCkKICAgICAgcmV0dXJuIHRvUGF0aChwYXJhbXMpCiAgICB9LAogICAgaGFuZGxlTGluayhpdGVtKSB7CiAgICAgIGNvbnN0IHsgcmVkaXJlY3QsIHBhdGggfSA9IGl0ZW0KICAgICAgaWYgKHJlZGlyZWN0KSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2gocmVkaXJlY3QpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy4kcm91dGVyLnB1c2godGhpcy5wYXRoQ29tcGlsZShwYXRoKSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n    <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\n        <span v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\" class=\"no-redirect\">{{ item.meta.title }}</span>\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\n      </el-breadcrumb-item>\n    </transition-group>\n  </el-breadcrumb>\n</template>\n\n<script>\nimport pathToRegexp from 'path-to-regexp'\n\nexport default {\n  data() {\n    return {\n      levelList: null\n    }\n  },\n  watch: {\n    $route() {\n      this.getBreadcrumb()\n    }\n  },\n  created() {\n    this.getBreadcrumb()\n  },\n  methods: {\n    getBreadcrumb() {\n      // only show routes with meta.title\n      const matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n      // console.log(matched)\n      if (matched.length > 1) {\n        // if (!this.isDashboard(first)) {\n      //   matched = [{ path: '/dashboard', meta: { title: 'Dashboard' }}].concat(matched)\n      // }\n        this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n      } else if (matched.length === 1) {\n        const oneMatched = matched[0]\n        if (oneMatched.meta && oneMatched.meta.totalTitle) {\n          const levelList = []\n          const array = oneMatched.path.split('/')\n          array.shift()\n          array.forEach((item, index) => {\n            levelList.push({\n              path: this.getFullPath(array, index),\n              meta: {\n                title: oneMatched.meta.totalTitle[index]\n              }\n            })\n          })\n          this.levelList = levelList\n        } else {\n          this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n        }\n      } else {\n        this.levelList = []\n      }\n    },\n    getFullPath(array, index) {\n      return array.reduce((total, currentValue, currentIndex) => {\n        if (currentIndex > index) return total\n        return `${total}/${currentValue}`\n      }, '')\n    },\n    isDashboard(route) {\n      const name = route && route.name\n      if (!name) {\n        return false\n      }\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase()\n    },\n    pathCompile(path) {\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n      const { params } = this.$route\n      var toPath = pathToRegexp.compile(path)\n      return toPath(params)\n    },\n    handleLink(item) {\n      const { redirect, path } = item\n      if (redirect) {\n        this.$router.push(redirect)\n        return\n      }\n      this.$router.push(this.pathCompile(path))\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-breadcrumb.el-breadcrumb {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 17px;\n  margin-left: 8px;\n\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n</style>\n"]}]}